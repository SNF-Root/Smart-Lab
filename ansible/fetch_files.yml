- name: Gather facts
  setup:

- name: Find the most recent file from a remote directory (Unix)
  block:
    - find:
        paths: "{{ dir_info.src }}"
        recurse: no
        age_stamp: mtime
        file_type: file
      register: unix_find_result

    - set_fact:
        is_remote_dir_empty: "{{ unix_find_result.matched == 0 }}"
        most_recent_file: "{{ (unix_find_result.files | sort(attribute='mtime', reverse=True) | first) if unix_find_result.files else None }}"
  when: ansible_facts['os_family'] != 'Windows'

- name: Find the most recent file from a remote directory (Windows)
  block:
    - win_shell: |
        $files = Get-ChildItem -Path "{{ dir_info.src }}" -File | Sort-Object LastWriteTime -Descending
        if ($files) {
          $files[0].FullName
        }
      register: win_find_result

    - set_fact:
        is_remote_dir_empty: "{{ win_find_result.stdout == '' }}"
        most_recent_file: "{{ win_find_result.stdout_lines[0] | default(None) }}"
  when: ansible_facts['os_family'] == 'Windows'

- name: Check if the file already exists locally (Unix)
  block:
    - stat:
        path: "{{ dir_info.dest }}/{{ most_recent_file.path | basename }}"
      register: stat_result
  when:
    - not is_remote_dir_empty
    - most_recent_file is defined
    - most_recent_file.path is defined
    - ansible_facts['os_family'] != 'Windows'

- name: Check if the file already exists locally (Windows)
  block:
    - win_stat:
        path: "{{ dir_info.dest }}/{{ most_recent_file | win_basename }}"
      register: stat_result
  when:
    - not is_remote_dir_empty
    - most_recent_file is defined
    - ansible_facts['os_family'] == 'Windows'

- name: Copy the most recent file from remote host to local machine if not already present
  fetch:
    src: "{{ most_recent_file if ansible_facts['os_family'] == 'Windows' else most_recent_file.path }}"
    dest: "../{{ dir_info.dest }}/{{ most_recent_file | win_basename if ansible_facts['os_family'] == 'Windows' else most_recent_file.path | basename }}"
    flat: yes
  when:
    - not is_remote_dir_empty
    - most_recent_file is defined
    - stat_result.stat.exists is not defined or not stat_result.stat.exists